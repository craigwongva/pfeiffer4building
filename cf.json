{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Jenkins Server",
    "Parameters"               : {
  "secgrp" : {
    "Type" : "String"
  },
        "InstanceType" : {
            "Description" : "EC2 instance type for Jenkins Server",
            "Type"        : "String",
            "Default"     : "t2.micro",
            "AllowedValues" : [
                "t2.micro"
            ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "KeyName"      : {
            "Description" : "The EC2 Key Pair to allow SSH access to EC2 instances",
            "Type"        : "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
        },
        "VpcId"        : {
            "Description" : "The VPC Id where the EC2 instances will be launched.",
            "Type"        : "AWS::EC2::VPC::Id",
            "ConstraintDescription" : "must be the name of an existing VPC."
        },
        "YourIPRange"  : {
            "Description" : "CIDR block of the network from where you will connect to the Jenkins server using HTTP and SSH",
            "Type"        : "String",
            "MinLength"   : "9",
            "MaxLength"   : "18",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "VPCSubnet"    : {
            "Description" : "Select a subnet id for the Jenkins Server",
            "Type"        : "AWS::EC2::Subnet::Id"
        }
    },
    "Mappings"                 : {
        "AWSInstanceType2Arch" : {
            "t2.micro" : {
                "Arch" : "HVM64"
            }
        },
        "AWSRegionArch2AMI"    : {
            "us-west-2" : {
                "PV64" : "ami-ff527ecf",
                "HVM64" : "ami-e7527ed7"
            }
        }
    },
    "Resources"                : {
        "JenkinsServer" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "Comment" : "Install Jenkins, nginx and the Jenkins CodeDeploy/CodePipeline plugin",
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "install_all" : [
                            "install_base",
                            "install_nginx"
                        ]
                    },
                    "install_base" : {
                        "packages" : {
                            "yum" : {
                                "git" : [
                                ]
                            }
                        }
                    },
                    "install_nginx" : {
                        "packages" : {
                            "yum" : {
                                "nginx" : [
                                ]
                            }
                        },
                        "files"    : {
                            "/etc/nginx/nginx.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "user  nginx;\n",
                                            "worker_processes  1;\n\n",
                                            "error_log  /var/log/nginx/error.log;\n",
                                            "pid        /var/run/nginx.pid;\n\n",
                                            "events {\n",
                                            "    worker_connections  1024;\n",
                                            "}\n\n",
                                            "http {\n",
                                            "    include       /etc/nginx/mime.types;\n",
                                            "    default_type  application/octet-stream;\n",
                                            "    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n",
                                            "                      '$status $body_bytes_sent \"$http_referer\" '\n",
                                            "                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n",
                                            "    access_log  /var/log/nginx/access.log  main;\n",
                                            "    sendfile        on;\n",
                                            "    keepalive_timeout  65;\n",
                                            "    include /etc/nginx/conf.d/*.conf;\n",
                                            "    index   index.html index.htm;\n",
                                            "    server {\n",
                                            "        listen       80;\n",
                                            "        server_name  _;\n",
                                            "        location / {\n",
                                            "          proxy_pass              http://127.0.0.1:8080;\n",
                                            "          proxy_set_header        Host $host;\n",
                                            "          proxy_set_header        X-Real-IP $remote_addr;\n",
                                            "          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n",
                                            "          proxy_connect_timeout   150;\n",
                                            "          proxy_send_timeout      100;\n",
                                            "          proxy_read_timeout      100;\n",
                                            "          proxy_buffers           4 32k;\n",
                                            "          client_max_body_size    8m;\n",
                                            "          client_body_buffer_size 128k;\n",
                                            "        }\n",
                                            "   }\n",
                                            "}\n"
                                        ]
                                    ]
                                },
                                "mode"    : "000444",
                                "owner"   : "root",
                                "group"   : "root"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "nginx" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "/etc/nginx/nginx.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "KeyName" : {
                    "Ref" : "KeyName"
                },
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "NetworkInterfaces" : [
                    {
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "GroupSet"                 : [
                            {
                                "Ref" : "secgrp"
                            }
                        ],
                        "SubnetId"                 : {
                            "Ref" : "VPCSubnet"
                        }
                    }
                ],
                "InstanceType"      : {
                    "Ref" : "InstanceType"
                },
                "IamInstanceProfile" : {
                    "Ref" : "JenkinsInstanceProfile"
                },
    "SecurityGroupIds": [
     { "Ref": "secgrp" }
    ],
    "IamInstanceProfile": "RoleForTestingRoles",
                "UserData"           : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
"#!/bin/bash -ex\n",
"yum install git -y\n",
"sudo -u ec2-user bash -c 'cd /home/ec2-user; git clone https://github.com/craigwongva/pfeiffer4building.git > /tmp/u10 2>&1 '\n",
"sudo -u ec2-user bash -c '/home/ec2-user/pfeiffer4building/userdata > /tmp/u20 2>&1'\n"
                            ]
                        ]
                    }
                },
                "Tags"               : [
                    {
                        "Key" : "Name",
                        "Value" : "Jenkins Server"
                    }
                ]
            }
        },
        "JenkinsRole"          : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "Path" : "/",
                "ManagedPolicyArns" : [
                    "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess"
                ],
                "AssumeRolePolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action"    : [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "JenkinsInstanceProfile" : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Path" : "/",
                "Roles" : [
                    {
                        "Ref" : "JenkinsRole"
                    }
                ]
            }
        }
    },
    "Outputs"                  : {
        "JenkinsServerDNSName" : {
            "Description" : "DNS Name of Jenkins Server",
            "Value"       : {
                "Fn::GetAtt" : [
                    "JenkinsServer",
                    "PublicDnsName"
                ]
            }
        }
    }
}

